---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/438631/reviews?api_key=DONT SHOW MY API
      KEY&language=en-US
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 12 May 2022 22:17:10 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - 8839459ef216fa3bf65abdeeed951a8c5a96a68f
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '15730'
      Last-Modified:
      - '2022-04-24 23:38:41 +0000'
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 28d79637e27f11e3ab19a9515e273a5a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - g-medsaDV02R9i2mSE4rDMGyy2G9XVuQTBp4fcU8ZeoSKH4CUDbzJw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 12 May 2022 22:17:10 GMT
recorded_with: VCR 6.1.0
