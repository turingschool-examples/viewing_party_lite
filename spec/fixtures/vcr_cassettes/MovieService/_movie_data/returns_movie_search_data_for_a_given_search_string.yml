---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=1&query=The%20Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 06 Sep 2022 19:37:53 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 58d3a6a8551ccf9c7d205fa93b6b9630.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD55-P1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - sE6cX6_28-nZpUA9S00YKLS-gFD_G3BQJA84kPr2x0hFwd13SVQWVg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvaHR1dXVFd0F2RFZFQ01wYjBsdExMeVp5RER0LmpwZyIsImdlbnJlX2lkcyI6WzE4LDgwXSwiaWQiOjIzOCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEdvZGZhdGhlciIsIm92ZXJ2aWV3IjoiU3Bhbm5pbmcgdGhlIHllYXJzIDE5NDUgdG8gMTk1NSwgYSBjaHJvbmljbGUgb2YgdGhlIGZpY3Rpb25hbCBJdGFsaWFuLUFtZXJpY2FuIENvcmxlb25lIGNyaW1lIGZhbWlseS4gV2hlbiBvcmdhbml6ZWQgY3JpbWUgZmFtaWx5IHBhdHJpYXJjaCwgVml0byBDb3JsZW9uZSBiYXJlbHkgc3Vydml2ZXMgYW4gYXR0ZW1wdCBvbiBoaXMgbGlmZSwgaGlzIHlvdW5nZXN0IHNvbiwgTWljaGFlbCBzdGVwcyBpbiB0byB0YWtlIGNhcmUgb2YgdGhlIHdvdWxkLWJlIGtpbGxlcnMsIGxhdW5jaGluZyBhIGNhbXBhaWduIG9mIGJsb29keSByZXZlbmdlLiIsInBvcHVsYXJpdHkiOjEwNS43MDEsInBvc3Rlcl9wYXRoIjoiLzNiaGtyajU4VnR1N2VuWXNSb2xEMWZaZGphMS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTcyLTAzLTE0IiwidGl0bGUiOiJUaGUgR29kZmF0aGVyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguNywidm90ZV9jb3VudCI6MTY0OTR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3BvZWM2UnFPS1k5aVNpSVVtZnlmUGZpTHR2Qi5qcGciLCJnZW5yZV9pZHMiOlsxOCw4MF0sImlkIjoyNDAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBHb2RmYXRoZXIgUGFydCBJSSIsIm92ZXJ2aWV3IjoiSW4gdGhlIGNvbnRpbnVpbmcgc2FnYSBvZiB0aGUgQ29ybGVvbmUgY3JpbWUgZmFtaWx5LCBhIHlvdW5nIFZpdG8gQ29ybGVvbmUgZ3Jvd3MgdXAgaW4gU2ljaWx5IGFuZCBpbiAxOTEwcyBOZXcgWW9yay4gSW4gdGhlIDE5NTBzLCBNaWNoYWVsIENvcmxlb25lIGF0dGVtcHRzIHRvIGV4cGFuZCB0aGUgZmFtaWx5IGJ1c2luZXNzIGludG8gTGFzIFZlZ2FzLCBIb2xseXdvb2QgYW5kIEN1YmEuIiwicG9wdWxhcml0eSI6NzMuNzE2LCJwb3N0ZXJfcGF0aCI6Ii9oZWsza29EVXlSUWs3RkloUFhzYTZtVDJaYzMuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk3NC0xMi0yMCIsInRpdGxlIjoiVGhlIEdvZGZhdGhlciBQYXJ0IElJIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguNiwidm90ZV9jb3VudCI6OTk2NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvOWp6Y0JqM0szc09KZTF5RjczSkVGUElTSUhFLmpwZyIsImdlbnJlX2lkcyI6WzgwLDE4LDUzXSwiaWQiOjI0Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEdvZGZhdGhlciBQYXJ0IElJSSIsIm92ZXJ2aWV3IjoiSW4gdGhlIG1pZHN0IG9mIHRyeWluZyB0byBsZWdpdGltaXplIGhpcyBidXNpbmVzcyBkZWFsaW5ncyBpbiAxOTc5IE5ldyBZb3JrIGFuZCBJdGFseSwgYWdpbmcgbWFmaWEgZG9uLCBNaWNoYWVsIENvcmxlb25lIHNlZWtzIGZvcmdpdmVuZXNzIGZvciBoaXMgc2lucyB3aGlsZSB0YWtpbmcgYSB5b3VuZyBwcm90ZWdlIHVuZGVyIGhpcyB3aW5nLiIsInBvcHVsYXJpdHkiOjU1Ljc1NiwicG9zdGVyX3BhdGgiOiIvbG0zcFEyUW9RMTZwZXh0UnNtblViRzJvbkVTLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTAtMTItMjUiLCJ0aXRsZSI6IlRoZSBHb2RmYXRoZXIgUGFydCBJSUkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny40LCJ2b3RlX2NvdW50Ijo1MDUzfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90WWp5azRJajdDd1ZPbjJvdmNYZFJZZmZSOWsuanBnIiwiZ2VucmVfaWRzIjpbODAsMThdLCJpZCI6MzY0MTUwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgR29kZmF0aGVyIFRyaWxvZ3k6IDE5MDEtMTk4MCIsIm92ZXJ2aWV3IjoiVGhlIG11bHRpZ2VuZXJhdGlvbmFsIHNhZ2Egb2YgdGhlIHJpc2UgYW5kIGZhbGwgb2YgdGhlIENvcmxlb25lIGNyaW1lIGZhbWlseS4gU3RvcnkgaXMgdG9sZCBpbiBjaHJvbm9sb2dpY2FsIG9yZGVyLCBhbmQgbnVtZXJvdXMgc2NlbmVzIHRoYXQgd2VyZSBkZWxldGVkIGZyb20gZWFjaCBmaWxtIGhhdmUgYmVlbiByZXN0b3JlZC4iLCJwb3B1bGFyaXR5IjoxNC43NzgsInBvc3Rlcl9wYXRoIjoiL3J3RVAwUndwRjJtS0dSYnM3amVyZEM0YWVNQi5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTkyLTEwLTE3IiwidGl0bGUiOiJUaGUgR29kZmF0aGVyIFRyaWxvZ3k6IDE5MDEtMTk4MCIsInZpZGVvIjp0cnVlLCJ2b3RlX2F2ZXJhZ2UiOjguOSwidm90ZV9jb3VudCI6MTM1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTldLCJpZCI6Mjk0NjM2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgR29kZmF0aGVyIExlZ2FjeSIsIm92ZXJ2aWV3IjoiVEhFIEdPREZBVEhFUiBMRUdBQ1kgZ29lcyBkZWVwIGluc2lkZSBGcmFuY2lzIEZvcmQgQ29wcG9sYSdzIGVwaWMgc2FnYSBhYm91dCB0aGUgQ29ybGVvbmUgY3JpbWUgZmFtaWx5IGFuZCByZXZlYWxzIGhvdyB0aGUgQWNhZGVteSBBd2FyZC13aW5uaW5nIGZpbG0gYW5kIGl0cyBzZXF1ZWxzIGJlY2FtZSBvbmUgb2YgdGhlIG1vc3QgYWNjbGFpbWVkIGZyYW5jaGlzZXMgaW4gSG9sbHl3b29kIGhpc3RvcnkuIEZlYXR1cmluZyBpY29uaWMgc2NlbmVzIGZyb20gYWxsIHRocmVlIGZpbG1zLCBuZXZlciBiZWZvcmUgc2VlbiBob21lIG1vdmllcyBhbmQgaW5zaWdodGZ1bCBpbnRlcnZpZXdzIHdpdGggZmlsbW1ha2VycyAoRnJhbmNpcyBGb3JkIENvcHBvbGEsIEFsbCBSdWRkeSBhbmQgUGV0ZXIgQmFydCksIGFjdG9ycyAoQWwgUGFjaW5vLCBKYW1lcyBDYWFuLCBUYWxpYSBTaGlyZSwgSm9lIE1hbnRlZ25hLCBldCBhbC4pLCBsYXcgZW5mb3JjZW1lbnQgb2ZmaWNpYWxzIGFuZCBldmVuIGZvcm1lciBNYWZpYSBtZW1iZXJzLiBUaGlzIGZlYXR1cmUgbGVuZ3RoIGRvY3VtZW50YXJ5IGlsbHVzdHJhdGVzIHdoeSBUaGUgR29kZmF0aGVyIHRyaWxvZ3kgY29udGludWVzIHRvIGVudGVydGFpbiBhbmQgZmFzY2luYXRlIGF1ZGllbmNlcyBhbmQgaG93IGl0IGNvbnRpbnVlcyB0byBpbXBhY3QgdGhlIHdheSBzb2NpZXR5IHZpZXdzIGV2ZXJ5dGhpbmcgZnJvbSBjYXBpdGFsaXNtIHRvIGNyaW1lLiIsInBvcHVsYXJpdHkiOjMuMTEsInBvc3Rlcl9wYXRoIjoiLzl5OXc1cHJ2VmpCdHdXbDlUTnR2VGhMME5OaS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTA3LTEyIiwidGl0bGUiOiJUaGUgR29kZmF0aGVyIExlZ2FjeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjEsInZvdGVfY291bnQiOjE0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9jMXZySnh5dUtoc3dNbTlJYlJKSmhzRlhtMEkuanBnIiwiZ2VucmVfaWRzIjpbOTldLCJpZCI6NTYyMDUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBHb2RmYXRoZXIgRmFtaWx5OiBBIExvb2sgSW5zaWRlIiwib3ZlcnZpZXciOiJBIGRvY3VtZW50YXJ5IG9uIHRoZSBtYWtpbmcgb2YgdGhlIHRocmVlIEdvZGZhdGhlciBmaWxtcywgd2l0aCBpbnRlcnZpZXdzIGFuZCByZWNvbGxlY3Rpb25zIGZyb20gdGhlIGZpbG0gbWFrZXJzIGFuZCBjYXN0LiBUaGlzIGZlYXR1cmUgYWxzbyBpbmNsdWRlcyB0aGUgb3JpZ2luYWwgc2NyZWVuIHRlc3RzIG9mIHNvbWUgb2YgdGhlIGFjdG9ycyBmb3IgXCJUaGUgR29kZmF0aGVyXCIgZmlsbSwgYW5kIHNvbWUgY2FuZGlkIG1vbWVudHMgb24gdGhlIHNldCBvZiBcIlRoZSBHb2RmYXRoZXI6IFBhcnQgSUlJLlwiIiwicG9wdWxhcml0eSI6Mi43NjEsInBvc3Rlcl9wYXRoIjoiLzJFeDN5bk5jOTVweGtlTG13dkdlWVZXakt0YS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTkwLTA3LTEyIiwidGl0bGUiOiJUaGUgR29kZmF0aGVyIEZhbWlseTogQSBMb29rIEluc2lkZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjgsInZvdGVfY291bnQiOjMyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9mN1hGQ09qZ3p4bXROVDhTUVhTTExtUlppaHguanBnIiwiZ2VucmVfaWRzIjpbOTksMTA0MDJdLCJpZCI6NjA2MjE1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgQmxhY2sgR29kZmF0aGVyIiwib3ZlcnZpZXciOiJGb2xsb3dzIHRoZSBsaWZlIG9mIENsYXJlbmNlIEF2YW50LCB0aGUgdWx0aW1hdGUsIHVuY2Vuc29yZWQgbWVudG9yIGFuZCBiZWhpbmQtdGhlLXNjZW5lcyByYWlubWFrZXIgaW4gbXVzaWMsIGZpbG0sIFRWIGFuZCBwb2xpdGljcy4iLCJwb3B1bGFyaXR5Ijo1LjE2OCwicG9zdGVyX3BhdGgiOiIvM0JRQXJuWFB3TTVuSGVTMXRsR0tMWTdlYXBQLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDYtMDciLCJ0aXRsZSI6IlRoZSBCbGFjayBHb2RmYXRoZXIiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni44LCJ2b3RlX2NvdW50IjoyNn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE4XSwiaWQiOjc0ODU3NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRnJhbmNpcyBhbmQgVGhlIEdvZGZhdGhlciIsIm92ZXJ2aWV3IjoiQSBkcmFtYSBhYm91dCB0aGUgbGVnZW5kYXJ5IGFuZCB3aWxkIGJhdHRsZXMgdGhhdCB3ZW50IGludG8gbWFraW5nIHRoZSAxOTcyIGNsYXNzaWMgVGhlIEdvZGZhdGhlci4iLCJwb3B1bGFyaXR5IjoxLjU3NiwicG9zdGVyX3BhdGgiOiIvb2dEMmJseHVnTVpncDI3VmpkT213SW1icWk4LmpwZyIsInJlbGVhc2VfZGF0ZSI6IiIsInRpdGxlIjoiRnJhbmNpcyBhbmQgVGhlIEdvZGZhdGhlciIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9qNHd3S1MwYW9rZkdlN1FEWXFVMms2NzQ0aGkuanBnIiwiZ2VucmVfaWRzIjpbOTksMjddLCJpZCI6NTg4NjIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhlcnNjaGVsbCBHb3Jkb24gTGV3aXM6IFRoZSBHb2RmYXRoZXIgb2YgR29yZSIsIm92ZXJ2aWV3IjoiVGFrZSBhbiBvdXRyYWdlb3VzIHJpZGUgdGhyb3VnaCB0aGlzIHdpbGQgd29ybGQgb2YgZXhwbG9pdGF0aW9uIGZpbG1zIHdpdGggdGhpcyB0aG9yb3VnaGx5IGVudGVydGFpbmluZyBkb2N1bWVudGFyeSwgSEVSU0NIRUxMIEdPUkRPTiBMRVdJUyDigJMgVEhFIEdPREZBVEhFUiBPRiBHT1JFISBGZWF0dXJpbmcgY3VsdCBkaXJlY3RvciBKb2huIFdhdGVycywgRHJpdmUtSW4gTW92aWUgQ3JpdGljIEpvZSBCb2IgQnJpZ2dzLCBIZXJzY2hlbGwgR29yZG9uIExld2lzIGhpbXNlbGYgYW5kIGEg4oCcY2FzdCBvZiB0aG91c2FuZHMs4oCdIHlvdeKAmWxsIHdpdG5lc3MgdGhlIGlubm9jZW50IGJhcmUtbmFrZWQgZXJhIG9mIE51ZGllLUN1dGllcyBiZWZvcmUgTGV3aXMgc2Nob2NrZWQgdGhlIHdvcmxkIHdpdGgg4oCcQmxvb2QgRmVhc3Qs4oCdIHRoZSBmaXJzdCBldmVyIGdvcmUgZmlsbSEiLCJwb3B1bGFyaXR5IjoyLjA4NiwicG9zdGVyX3BhdGgiOiIvbXp3aU14cjBhNXhPZTNSOGQ1YzJEbGtDWXpNLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTAtMDYtMDEiLCJ0aXRsZSI6IkhlcnNjaGVsbCBHb3Jkb24gTGV3aXM6IFRoZSBHb2RmYXRoZXIgb2YgR29yZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjQsInZvdGVfY291bnQiOjE3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9mRTBYbWIwR2FBbTFSNU5rck11UGV6am9Hd1MuanBnIiwiZ2VucmVfaWRzIjpbMjgsMzUsNTNdLCJpZCI6NzA4MjksIm9yaWdpbmFsX2xhbmd1YWdlIjoia28iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBMYXN0IEdvZGZhdGhlciIsIm92ZXJ2aWV3IjoiWW91bmctZ29vIHRoZSBzb24gb2YgbWFmaWEgYm9zcyBEb24gQ2FyaW5pLCBpcyB0b28gZm9vbGlzaCB0byBiZSBwYXJ0IG9mIHRoZSBtYWZpYSBlbGl0ZS4gT25lIGRheSwgWW91bmctZ29vIGNvbWVzIHRvIGhpcyBmYXRoZXIgYW5kIGlzIHRyYWluZWQgYnkgVG9ueSBWIHRvIGJlIGhpcyBmYXRoZXIncyBzdWNjZXNzb3IuIEEgZmV3IGRheXMgbGF0ZXIsIFlvdW5nLWdvbyBhY2NpZGVudGFsbHkgcmVzY3VlcyBOYW5jeSwgdGhlIG9ubHkgZGF1Z2h0ZXIgb2YgRG9uIEJvbmZhbnRlLCB0aGUgYm9zcyBvZiBhIHJpdmFsIG1hZmlhIGZhbWlseS4gQnV0IFZpbm5pZSwgYW4gdW5kZXItYm9zcyBvZiB0aGUgQm9uZmFudGUgZmFtaWx5IGtpZG5hcHBlZCBoZXIgYW5kIGZhYnJpY2F0ZXMgdGhhdCBZb3VuZy1nb28gaGFzIHRha2VuIGhlci4gVmlubmllJ3MgYmVoYXZpb3IgcHJvdm9rZXMgYW4gYXJtZWQgY29uZmxpY3QgYmV0d2VlbiB0aGUgdHdvIGZhbWlsaWVzLiIsInBvcHVsYXJpdHkiOjIuOTM2LCJwb3N0ZXJfcGF0aCI6Ii96TGNLR3hLbjhxZ3JHYVVaQVdaWTNOdmk1ZnIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMC0xMi0yOSIsInRpdGxlIjoiVGhlIExhc3QgR29kZmF0aGVyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuMywidm90ZV9jb3VudCI6MTJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsxOF0sImlkIjo5NDk3NjYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBHb2RmYXRoZXIgQnVjayIsIm92ZXJ2aWV3IjoiVHdvIGJyb3RoZXJzLCB3aG8gbWVldCBvbmNlIGEgeWVhciBhdCBhIGNhYmluIGluIEJpZyBCZWFyIHRvIGh1bnQgd2hpdGUtdGFpbGVkIGRlZXIgZm9yIGEgd2VlaywgdW5jb3ZlciBoaWRkZW4gZmFtaWx5IHNlY3JldHMgYW5kIGxpZXMgd2hlbiB0aGVpciBzdGVwYnJvdGhlciBkcm9wcyBieSBmb3IgYW4gZXZlbmluZywgY2hhbmdpbmcgdGhlaXIgbGl2ZXMgZm9yZXZlci4iLCJwb3B1bGFyaXR5IjowLjg1NCwicG9zdGVyX3BhdGgiOiIvaVhFeEhkUXZFS2k1M1h3djU1aU1yYzBDR0U0LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjItMDQtMTkiLCJ0aXRsZSI6IlRoZSBHb2RmYXRoZXIgQnVjayIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjozLjUsInZvdGVfY291bnQiOjJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlszNSwxMDc3MF0sImlkIjo4NzQyNiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUGF1bCBNb29uZXk6IFRoZSBHb2RmYXRoZXIgb2YgQ29tZWR5Iiwib3ZlcnZpZXciOiJUaGUgdmVub21vdXMsIG5vLWhvbGRzLWJhcnJlZCBzdHlsZSBvZiBzdGFuZHVwIGNvbWVkeSBsZWdlbmQgUGF1bCBNb29uZXkgaXMgb24gZnVsbCBkaXNwbGF5IGluIHRoaXMgY29uY2VydCBzcGVjaWFsIHRoYXQgZmluZHMgdGhlIHZpdHJpb2xpYyBmdW5ueW1hbiBzcGFyaW5nIG5vIHBvbGl0aWNpYW4gb3IgcG9wIGN1bHR1cmUgaWNvbiBmcm9tIGhpcyBzY2F0aGluZyB3aXQsIGluY2x1ZGluZyBTYXJhaCBQYWxpbiwgTWVsIEdpYnNvbiBhbmQgZXZlbiBnb2xmIHBybyBUaWdlciBXb29kcy4gRGVmaWFudCwgc29jaWFsbHkgcmVsZXZhbnQsIGFuZCBhbHdheXMgaGlsYXJpb3VzLCBpdCdzIGEgbGVnZW5kYXJ5IE1vb25leSBwZXJmb3JtYW5jZSwgdGFwZWQgbGl2ZSBhdCB0aGUgQ29iYiBFbmVyZ3kgQ2VudHJlIGluIEF0bGFudGEsIEdlb3JnaWEuIiwicG9wdWxhcml0eSI6MS41MDEsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTAyLTAzIiwidGl0bGUiOiJQYXVsIE1vb25leTogVGhlIEdvZGZhdGhlciBvZiBDb21lZHkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6My44LCJ2b3RlX2NvdW50IjoyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTldLCJpZCI6NDA5NTIzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgR29kZmF0aGVyIGFuZCB0aGUgTW9iIiwib3ZlcnZpZXciOiJUaGUgR29kZmF0aGVyIEFuZCBUaGUgTW9iIHJldmVhbHMgdGhlIHRydWUgbGlmZSBzdG9yeSBvZiBtdXJkZXIsIG1hZmlhIGFuZCBtYXloZW0gdGhhdCBvY2N1cnJlZCBiZWhpbmQgdGhlIHNjZW5lcyBvZiB0aGUgbW9zdCBpY29uaWMgZ2FuZ3N0ZXIgZmlsbSBldmVyIG1hZGUuIiwicG9wdWxhcml0eSI6MS4xNjMsInBvc3Rlcl9wYXRoIjoiLzgwYW9tR0JpbGxlcGM2cU52U2ZXUmNwOVFTWi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA2LTA0LTI1IiwidGl0bGUiOiJUaGUgR29kZmF0aGVyIGFuZCB0aGUgTW9iIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlszNV0sImlkIjo3Nzk5ODcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiaWQiLCJvcmlnaW5hbF90aXRsZSI6IkF0ZW5nIFRoZSBHb2RmYXRoZXIiLCJvdmVydmlldyI6IkRvbiBBdGVuZyBTaW5nYWxlb24gdGhyb3dzIGEgcGFydHkgYW5kIHRoZSBiZWF1dGlmdWwgRG9uYSBWaXZpIGF0dGVuZHMgYW5kIGltbWVkaWF0ZWx5IGdhaW5zIElza2FrIEtyZW9saWJv4oCZcyBhdHRlbnRpb24uIEJ1dCB0aGUgcGFydHkgaXMgZGlzcnVwdGVkIGJ5IHRoZSBhcnJpdmFsIG9mIHRoZSBLcmlibyB0cmliZSB3aG8gd2FudCB0byBzZWVrIHJldmVuZ2UgZm9yIGFuIGluY2lkZW50IGF0IHRoZSBsYWtlLiBPbmUgZGF5LCBQYXBhaSB0aGUgc2FpbG9yIGFwcGVhcnMgYW5kIGhlIGdldHMgYWxvbmcgd2VsbCB3aXRoIERvbmEgVml2aSB1bnRpbCBJc2thayBiZWNvbWVzIGplYWxvdXMuIExhdGVyLCBJc2thayB1c2VzIHRoZSBLcmlibyB0cmliZSB0byBoZWxwIGhpbSBnZXQgaGlzIHdheS4gVGhlIHN0b3J5IGl0c2VsZiBjYW4gYmUgY29uc2lkZXJlZCBzdXBlcmZsdW91cyBhcyB0aGV5IG1lcmVseSBzZXQgdXAgdGhlIGpva2VzIGZvciB0aGUgc2NlbmVzLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOiIvd0tPSm1ubkZWYUlnRnp2cTAzM29wOHVJMUVjLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzYtMDctMTgiLCJ0aXRsZSI6IkF0ZW5nIFRoZSBHb2RmYXRoZXIiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1XSwiaWQiOjczNzI1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgR29kZmF0aGVyIG9mIEdyZWVuIEJheSIsIm92ZXJ2aWV3IjoiSm9lIEtlZWdhbiBpcyB0aGUgJ1JvY2t5JyBvZiBzdGFuZC11cCBjb21lZHkuIEEgZmlmdGVlbi15ZWFyIGNvbWVkeSB2ZXRlcmFuIHdobyB3YXMgcGVnZ2VkIGZvciBzdGFyZG9tIGVhcmx5IG9uIGluIGhpcyBjYXJlZXIgYnV0IGhhcyBibG93biBldmVyeSBtYWpvciBhdWRpdGlvbiBoZSBoYXMgZXZlciBoYWQgaW4gbGVnZW5kYXJ5IGZhc2hpb24uIEZyZXNoIG9mZiBhIHJlY2VudCBmaWFzY28gd2l0aCBhIGhlY2tsZXIgdGhhdCBpbmNsdWRlZCBhIGJyb2tlbiBub3NlLCBKb2UncyBmcmllbmQgS2VubnkgdGVsbHMgaGltIGhlIGNhbiBnZXQgdGhlbSBhbiBhdWRpdGlvbiBmb3IgJ1RoZSBUb25pZ2h0IFNob3cnIGFuZCB0aGF0IGl0J3MgJ2EgY2FuJ3QgbWlzcy4nIFRoZSBvbmUgY2F0Y2ggaXMgdGhhdCBpdCdzIGF0IGEgcm9hZHNpZGUgYmFyIGluIHRpbnkgUGluZSBMYWtlLCBXaXNjb25zaW4sIGhvbWV0b3duIG9mIFRvbmlnaHQgU2hvdyBUYWxlbnQgc2NvdXQsIEhhcnZleSBTa29yaWsgd2hvIG5ldmVyIG1pc3NlcyAnUm9ja3RvYmVyZmVzdC4nIEhhdmluZyBkb3VidHMgYnV0IG5lZWRpbmcgYSBicmVhayBmcm9tIEwuQS4sIEpvZSByZWx1Y3RhbnRseSBhZ3JlZXMgdG8gZ28uIEFycml2aW5nIGluIFdpc2NvbnNpbiwgSm9lIGJvbWJzIGhpcyBmaXJzdCBuaWdodCBvbiBzdGFnZSB3aGVuIGxvY2FsIGVtY2VlIER1ZyBzYWJvdGFnZXMgaGltLiBKb2UgY2Fubm90IGdldCBhIGJyZWFrIHVudGlsIGhlIGVuY291bnRlcnMgaGlzIGZvcm1lciBoaWdoIHNjaG9vbCBFbmdsaXNoIHRlYWNoZXIsIHRoZSBiZWF1dGlmdWwgTW9sbHkgTWFob25leSB3aG8gaXMgYWxzbyBhdCBhIGNyb3Nzcm9hZHMgaW4gaGVyIGxpZmUuIiwicG9wdWxhcml0eSI6MS4wOTQsInBvc3Rlcl9wYXRoIjoiLzgzdUFFeTRqTFIxUXBrVW1zeDNZSFRwUDF2Qi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA1LTA0LTIwIiwidGl0bGUiOiJUaGUgR29kZmF0aGVyIG9mIEdyZWVuIEJheSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo0LjEsInZvdGVfY291bnQiOjR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3ZpMUJwek15cURlNjJqYTFtN2pDUkJtTkM1Ri5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjo1ODUwMjUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkVtdWxzaW9uYWwgUmVzY3VlOiBSZXZlYWxpbmcgJ1RoZSBHb2RmYXRoZXInIiwib3ZlcnZpZXciOiJXZSBoZWFyIGZyb20gQ29wcG9sYSwgU3BpZWxiZXJnLCBkaXJlY3RvciBvZiBwaG90b2dyYXBoeSBHb3Jkb24gV2lsbGlzLCBjb25zdWx0aW5nIHJlc3RvcmF0aW9uIGNpbmVtYXRvZ3JhcGhlciBBbGxlbiBEYXZpYXUsIGZpbG0gYXJjaGl2aXN0IFJvYmVydCBBLiBIYXJyaXMsIFBhcmFtb3VudCBQb3N0IFByb2R1Y3Rpb24gZXhlY3V0aXZlIFZQIE1hcnRpbiBDb2hlbiwgTVBJIHNlbmlvciB0ZWNobmljYWwgYWR2aXNvciBEYW5pZWwgUm9zZW4sIE1QSSBzY2FubmluZyB0ZWNobmljaWFuIENocmlzIEdpbGxhc3BpZSwgc2VuaW9yIGRpZ2l0YWwgYXJ0aXN0IFN0ZXZlbiBBLiBTYW5jaGV6LCBkaWdpdGFsIGFydGlzdCBWYWxlcmllIFYuIE1jTWFob24sIGFuZCBNUEkgdGVjaG5pY2FsIGRpcmVjdG9yIGFuZCBzZW5pb3IgY29sb3Jpc3QgSmFuIFlhcmJyb3VnaCBhcyB0aGV5IG9mZmVyIGludGVyZXN0aW5nIGZhY3RzIGFib3V0IHRoZSBvcmlnaW5hbCBjaW5lbWF0b2dyYXBoeSwgZGV0YWlscyBvbiB0aGUgcmVzdG9yYXRpb24gb2YgdGhlIHRocmVlIGZpbG1zLiIsInBvcHVsYXJpdHkiOjAuOTAyLCJwb3N0ZXJfcGF0aCI6Ii9tcnMzY1NET1VLczZoM3k0akVmbUFjN0pBYk0uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwOC0wOS0yMyIsInRpdGxlIjoiRW11bHNpb25hbCBSZXNjdWU6IFJldmVhbGluZyAnVGhlIEdvZGZhdGhlciciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Nywidm90ZV9jb3VudCI6Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjo1MjY4MDMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkZyZWQ6IFRoZSBHb2RmYXRoZXIgb2YgQnJpdGlzaCBDcmltZSIsIm92ZXJ2aWV3IjoiVGhpcyBpcyBhbiBleGFtaW5hdGlvbiBpbnRvIHRoZSBwc3ljaGUgb2YgZm9ybWVyIExvbmRvbiBnYW5nc3RlciBGcmVkZGllIEZvcmVtYW46IDg1IHllYXJzIG9sZCwgYWxsZWdlZGx5wqByZXNwb25zaWJsZSBmb3LCoG11bHRpcGxlIG11cmRlcnMsIGFuZCBuZWFyaW5nIHRoZSBlbmQgb2YgaGlzIGxpZmUuwqBGcmVkIGlzIHRoZSBvbmx5IGdhbmdzdGVyIHdobyBsaXZlZCB0aHJvdWdoIHRoZSB0dXJidWxlbnQgaGlzdG9yeSBvZiB0aGUgQnJpdGlzaCB1bmRlcndvcmxkIGFuZCBzdXJ2aXZlZCB0b8KgdGVsbMKgdGhlIHRhbGUuIiwicG9wdWxhcml0eSI6MC45ODgsInBvc3Rlcl9wYXRoIjoiL3pRZEhJY0kzZHUzeEJCOW5sNkhFZGZyRXhrQi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA0LTIwIiwidGl0bGUiOiJGcmVkOiBUaGUgR29kZmF0aGVyIG9mIEJyaXRpc2ggQ3JpbWUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4yLCJ2b3RlX2NvdW50Ijo2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbXSwiaWQiOjU5ODE3Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEdvZGZhdGhlciBvZiBEaXNjbyIsIm92ZXJ2aWV3IjoiQXQgdGhlIGhlYXJ0IG9mIHRoaXMgcmVtYXJrYWJsZSwgbXVzaWMtZmlsbGVkIGRvY3VtZW50YXJ5IGlzIHRoZSBzdG9yeSBvZiBNZWwgQ2hlcmVuLCB0aGUg4oCYR29kZmF0aGVy4oCZIGhpbXNlbGYuIFRoZSBmaWxtIHRyYWNlcyB0aGUgY3VsdHVyYWwgY29uZGl0aW9ucyB3aGljaCBsZWQgdG8gdGhlIGZsb3dlcmluZyBvZiBkaXNjbywgdGhlIGZvdW5kaW5nIG9mIFdlc3QgRW5kIFJlY29yZHMgYW5kIHRoZSBQYXJhZGlzZSBHYXJhZ2UgYW5kLCBldmVudHVhbGx5LCB0aGUgb25zbGF1Z2h0IG9mIEFJRFMgYW5kIGl0cyBkZXZhc3RhdGluZyBlZmZlY3Qgb24gdGhlIG11c2ljYWwgYW5kIGdheSBjb21tdW5pdGllcyBvZiBOZXcgWW9yayBDaXR5LiBZZXQsIGxpa2UgZGlzY28gaXRzZWxmLCBpdCBpcyBwcmltYXJpbHkgY2VsZWJyYXRvcnkgaW4gbmF0dXJlLiBSYW5keSBKb25lcywgSnVuaW9yIFZhc3F1ZXogYW5kIExvdWlzIFZlZ2EgY29udHJpYnV0ZSwgYW1vbmcgbWFueSBvdGhlcnMuIFRoaXMgZXZvY2F0aXZlIHdvcmsgd2lsbCBpbnRlcmVzdCBhbnlvbmUgd2hvIGhhcyBkYW5jZWQgdG8gYW55dGhpbmcsIGV2ZXIuIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6Ii9mc2Zka0g2YlFMTWVHUFJpNXFJZFlmSUpJSXQuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwNy0wMy0wNCIsInRpdGxlIjoiVGhlIEdvZGZhdGhlciBvZiBEaXNjbyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjoxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9hd2kxaUFxeFNERHJDN2VGN3hFWTB1UUNnc0IuanBnIiwiZ2VucmVfaWRzIjpbMjgsODAsNTNdLCJpZCI6ODA3NTUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBCbGFjayBHb2RmYXRoZXIiLCJvdmVydmlldyI6IlRoZSBoZXJvZXMgaW4gVGhlIEJsYWNrIEdvZGZhdGhlciBhcmUgbWVtYmVycyBvZiBhbiBBZnJpY2FuLUFtZXJpY2FuIGNyaW1pbmFsIG9yZ2FuaXphdGlvbi4gTGlrZSBCcmFuZG8gaW4gVGhlIEdvZGZhdGhlciwgdGhleSdyZSBub3QgYXZlcnNlIHRvIHJvYmJlcnkgYW5kIG11cmRlciwgYnV0IHRoZXkgZG8gZHJhdyB0aGUgbGluZSBhdCBuYXJjb3RpY3MuIFdoZW4gdGhlIE1hZmlhIGluZmlsdHJhdGVzIHRoZSAnaG9vZCB3aXRoIGRhbmdlcm91cyBkcnVncywgdGhlIEJsYWNrIEdvZGZhdGhlciAoUm9kIFBlcnJ5KSBvcmRlcnMgaGlzIG1pbmlvbnMgdG8gcHV0IGFuIGVuZCB0byB0aGlzIHBlcmZpZHkuIiwicG9wdWxhcml0eSI6MS43MjMsInBvc3Rlcl9wYXRoIjoiLzRCN3dRRmZLbGNBUzNRRkw5NWlTblljZGxmSi5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTc0LTA5LTAzIiwidGl0bGUiOiJUaGUgQmxhY2sgR29kZmF0aGVyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUsInZvdGVfY291bnQiOjh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOls5OV0sImlkIjoxMDE0OTkzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUYWxraW5nIG1vdmllcyBUaGUgR29kZmF0aGVyIHNwZWNpYWwiLCJvdmVydmlldyI6Ik9uIHRoZSBmaWZ0aWV0aCBhbm5pdmVyc2FyeSBvZiBUaGUgR29kZmF0aGVyIC0gb2Z0ZW4gcHJvY2xhaW1lZCB0aGUgZ3JlYXRlc3QgZmlsbSBldmVyIG1hZGUgLSBUYWxraW5nIE1vdmllcyBjZWxlYnJhdGVzIHRoaXMgbGFuZG1hcmsgY2xhc3NpYy4gVGhlIHRlYW0gdmlzaXRzIHNvbWUgb2YgdGhlIGZhbW91cyBOZXcgWW9yayBsb2NhdGlvbnMgdXNlZCBpbiB0aGUgZmlsbSwgaW5jbHVkaW5nIHRoZSBEb24gQ29ybGVvbmUgZmFtaWx5IGhvbWUgaW4gU3RhdGVuIElzbGFuZCBhbmQgdGhlIEJyb29rbHluIGNlbWV0ZXJ5IHdoZXJlIFZpdG8gQ29ybGVvbmUgd2FzIGJ1cmllZC4iLCJwb3B1bGFyaXR5IjowLjY4MiwicG9zdGVyX3BhdGgiOiIvZzVTTFFLbXFJRkFoSEtWb0xNbkhyYkhnbllhLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjItMDctMDkiLCJ0aXRsZSI6IlRhbGtpbmcgbW92aWVzIFRoZSBHb2RmYXRoZXIgc3BlY2lhbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfV0sInRvdGFsX3BhZ2VzIjozLCJ0b3RhbF9yZXN1bHRzIjo2MH0=
  recorded_at: Tue, 06 Sep 2022 19:37:53 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=2&query=The%20Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 06 Sep 2022 19:37:53 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 06186860a5ea94b333945ca9761eb36c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD55-P1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - n8_8L_SkqFS3g3qs-YM6paW0BCSCf6UvQNw9jZQyw8E7tEeLH8bC3w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 06 Sep 2022 19:37:53 GMT
recorded_with: VCR 6.1.0
